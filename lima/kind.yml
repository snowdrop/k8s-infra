# This example requires Lima v0.8.0 or later
images:
  # Hint: run `limactl prune` to invalidate the "current" cache
  - location: "https://cloud-images.ubuntu.com/impish/current/impish-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/impish/current/impish-server-cloudimg-arm64.img"
    arch: "aarch64"
mounts:
  - location: "~/temp/lima"
    writable: true
# containerd is managed by Docker, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false
provision:
  - mode: system
    script: |
      #!/bin/sh
      sed -i 's/host.lima.internal.*/host.lima.internal host.docker.internal/' /etc/hosts
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v docker >/dev/null 2>&1 && exit 0
      export DEBIAN_FRONTEND=noninteractive
      curl -fsSL https://get.docker.com | sh
  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail
      sudo usermod -aG docker $USER
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v kind >/dev/null 2>&1 && exit 0
      kind_version=latest
      case $(uname -m) in
        x86_64)
          curl -sSL -o kind https://kind.sigs.k8s.io/dl/${kind_version}/kind-linux-amd64
          ;;
        aarch64)
          curl -sSL -o kind https://kind.sigs.k8s.io/dl/${kind_version}/kind-linux-arm64
          ;;
      esac
      chmod +x ./kind
      mv ./kind /usr/local/bin/kind
      kind completion bash >/etc/bash_completion.d/kind
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v kubectl >/dev/null 2>&1 && exit 0
      kube_version=$(curl -L -s https://dl.k8s.io/release/stable.txt)
      case $(uname -m) in
        x86_64)
          curl -sSL -o kubectl https://dl.k8s.io/release/${kube_version}/bin/linux/amd64/kubectl
          ;;
        aarch64)
          curl -sSL -o kubectl https://dl.k8s.io/release/${kube_version}/bin/linux/arm64/kubectl
          ;;
      esac
      install kubectl /usr/local/bin/kubectl
      rm -f kubectl
      kubectl completion bash >/etc/bash_completion.d/kubectl
  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail
      docker container inspect -f '{{.Id}}' kind-control-plane && exit 0
      kind create cluster
probes:
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "docker is not installed yet"
        exit 1
      fi
      if ! timeout 30s bash -c "until command -v kind >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "kind is not installed yet"
        exit 1
      fi
      if ! timeout 30s bash -c "until command -v kubectl >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "kubectl is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest
message: |
  To run `kubectl` on the host (assumes kubectl is installed):
  $ mkdir -p "{{.Dir}}/conf"
  $ export KUBECONFIG="{{.Dir}}/conf/kubeconfig.yaml"
  $ limactl shell {{.Name}} sudo cat /etc/kubernetes/admin.yaml >$KUBECONFIG
  $ kubectl ...
