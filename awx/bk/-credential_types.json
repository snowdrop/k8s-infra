{
     "credential_types": [
          {
               "name": "Amazon Web Services",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Access Key",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Secret Key",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "security_token",
                              "label": "STS Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users."
                         }
                    ],
                    "required": [
                         "username",
                         "password"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Amazon Web Services",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Google Compute Engine",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Service Account Email Address",
                              "type": "string",
                              "help_text": "The email address assigned to the Google Compute Engine service account."
                         },
                         {
                              "id": "project",
                              "label": "Project",
                              "type": "string",
                              "help_text": "The Project ID is the GCE assigned identification. It is often constructed as three words or two words followed by a three-digit number. Examples: project-id-000 and another-project-id"
                         },
                         {
                              "id": "ssh_key_data",
                              "label": "RSA Private Key",
                              "type": "string",
                              "format": "ssh_private_key",
                              "secret": true,
                              "multiline": true,
                              "help_text": "Paste the contents of the PEM file associated with the service account email."
                         }
                    ],
                    "required": [
                         "username",
                         "ssh_key_data"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Google Compute Engine",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "HetznerHCloudToken",
               "description": "Hetzner HCloud API Token",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "hetzner_api_token",
                              "type": "string",
                              "label": "Hetzner API Token",
                              "secret": true
                         }
                    ],
                    "required": [
                         "hetzner_api_token"
                    ]
               },
               "injectors": {
                    "env": {
                         "HCLOUD_TOKEN": "{{ hetzner_api_token }}"
                    }
               },
               "natural_key": {
                    "name": "HetznerHCloudToken",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Microsoft Azure Resource Manager",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "subscription",
                              "label": "Subscription ID",
                              "type": "string",
                              "help_text": "Subscription ID is an Azure construct, which is mapped to a username."
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "client",
                              "label": "Client ID",
                              "type": "string"
                         },
                         {
                              "id": "secret",
                              "label": "Client Secret",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "tenant",
                              "label": "Tenant ID",
                              "type": "string"
                         },
                         {
                              "id": "cloud_environment",
                              "label": "Azure Cloud Environment",
                              "type": "string",
                              "help_text": "Environment variable AZURE_CLOUD_ENVIRONMENT when using Azure GovCloud or Azure stack."
                         }
                    ],
                    "required": [
                         "subscription"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Microsoft Azure Resource Manager",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "OpenStack",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password (API Key)",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "host",
                              "label": "Host (Authentication URL)",
                              "type": "string",
                              "help_text": "The host to authenticate with.  For example, https://openstack.business.com/v2.0/"
                         },
                         {
                              "id": "project",
                              "label": "Project (Tenant Name)",
                              "type": "string"
                         },
                         {
                              "id": "project_domain_name",
                              "label": "Project (Domain Name)",
                              "type": "string"
                         },
                         {
                              "id": "domain",
                              "label": "Domain Name",
                              "type": "string",
                              "help_text": "OpenStack domains define administrative boundaries. It is only needed for Keystone v3 authentication URLs. Refer to the documentation for common scenarios."
                         },
                         {
                              "id": "region",
                              "label": "Region Name",
                              "type": "string",
                              "help_text": "For some cloud providers, like OVH, region must be specified"
                         },
                         {
                              "id": "verify_ssl",
                              "label": "Verify SSL",
                              "type": "boolean",
                              "default": true
                         }
                    ],
                    "required": [
                         "username",
                         "password",
                         "host",
                         "project"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "OpenStack",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Red Hat Ansible Automation Platform",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "Red Hat Ansible Automation Platform",
                              "type": "string",
                              "help_text": "Red Hat Ansible Automation Platform base URL to authenticate with."
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string",
                              "help_text": "Red Hat Ansible Automation Platform username id to authenticate as.This should not be set if an OAuth token is being used."
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "oauth_token",
                              "label": "OAuth Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "An OAuth token to use to authenticate with.This should not be set if username/password are being used."
                         },
                         {
                              "id": "verify_ssl",
                              "label": "Verify SSL",
                              "type": "boolean",
                              "secret": false
                         }
                    ],
                    "required": [
                         "host"
                    ]
               },
               "injectors": {
                    "env": {
                         "TOWER_HOST": "{{host}}",
                         "TOWER_USERNAME": "{{username}}",
                         "TOWER_PASSWORD": "{{password}}",
                         "TOWER_VERIFY_SSL": "{{verify_ssl}}",
                         "TOWER_OAUTH_TOKEN": "{{oauth_token}}",
                         "CONTROLLER_HOST": "{{host}}",
                         "CONTROLLER_USERNAME": "{{username}}",
                         "CONTROLLER_PASSWORD": "{{password}}",
                         "CONTROLLER_VERIFY_SSL": "{{verify_ssl}}",
                         "CONTROLLER_OAUTH_TOKEN": "{{oauth_token}}"
                    }
               },
               "natural_key": {
                    "name": "Red Hat Ansible Automation Platform",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Red Hat Satellite 6",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "Satellite 6 URL",
                              "type": "string",
                              "help_text": "Enter the URL that corresponds to your Red Hat Satellite 6 server. For example, https://satellite.example.org"
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "required": [
                         "host",
                         "username",
                         "password"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Red Hat Satellite 6",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Red Hat Virtualization",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "Host (Authentication URL)",
                              "type": "string",
                              "help_text": "The host to authenticate with."
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "ca_file",
                              "label": "CA File",
                              "type": "string",
                              "help_text": "Absolute file path to the CA file to use (optional)"
                         }
                    ],
                    "required": [
                         "host",
                         "username",
                         "password"
                    ]
               },
               "injectors": {
                    "file": {
                         "template": "[ovirt]\novirt_url={{host}}\novirt_username={{username}}\novirt_password={{password}}\n{% if ca_file %}ovirt_ca_file={{ca_file}}{% endif %}"
                    },
                    "env": {
                         "OVIRT_INI_PATH": "{{tower.filename}}",
                         "OVIRT_URL": "{{host}}",
                         "OVIRT_USERNAME": "{{username}}",
                         "OVIRT_PASSWORD": "{{password}}"
                    }
               },
               "natural_key": {
                    "name": "Red Hat Virtualization",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "VMware vCenter",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "VCenter Host",
                              "type": "string",
                              "help_text": "Enter the hostname or IP address that corresponds to your VMware vCenter."
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "required": [
                         "host",
                         "username",
                         "password"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "VMware vCenter",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
               "description": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "hetzner_api_token",
                              "type": "string",
                              "label": "Hetzner API Token",
                              "secret": true
                         }
                    ],
                    "required": [
                         "hetzner_api_token"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Centrify Vault Credential Provider Lookup",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Centrify Tenant URL",
                              "type": "string",
                              "help_text": "Centrify Tenant URL",
                              "format": "url"
                         },
                         {
                              "id": "client_id",
                              "label": "Centrify API User",
                              "type": "string",
                              "help_text": "Centrify API User, having necessary permissions as mentioned in support doc"
                         },
                         {
                              "id": "client_password",
                              "label": "Centrify API Password",
                              "type": "string",
                              "help_text": "Password of Centrify API User with necessary permissions",
                              "secret": true
                         },
                         {
                              "id": "oauth_application_id",
                              "label": "OAuth2 Application ID",
                              "type": "string",
                              "help_text": "Application ID of the configured OAuth2 Client (defaults to 'awx')",
                              "default": "awx"
                         },
                         {
                              "id": "oauth_scope",
                              "label": "OAuth2 Scope",
                              "type": "string",
                              "help_text": "Scope of the configured OAuth2 Client (defaults to 'awx')",
                              "default": "awx"
                         }
                    ],
                    "metadata": [
                         {
                              "id": "account-name",
                              "label": "Account Name",
                              "type": "string",
                              "help_text": "Local system account or Domain account name enrolled in Centrify Vault. eg. (root or DOMAIN/Administrator)"
                         },
                         {
                              "id": "system-name",
                              "label": "System Name",
                              "type": "string",
                              "help_text": "Machine Name enrolled with in Centrify Portal"
                         }
                    ],
                    "required": [
                         "url",
                         "account-name",
                         "system-name",
                         "client_id",
                         "client_password"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Centrify Vault Credential Provider Lookup",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "CyberArk AIM Central Credential Provider Lookup",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "CyberArk AIM URL",
                              "type": "string",
                              "format": "url"
                         },
                         {
                              "id": "app_id",
                              "label": "Application ID",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "client_key",
                              "label": "Client Key",
                              "type": "string",
                              "secret": true,
                              "multiline": true
                         },
                         {
                              "id": "client_cert",
                              "label": "Client Certificate",
                              "type": "string",
                              "secret": true,
                              "multiline": true
                         },
                         {
                              "id": "verify",
                              "label": "Verify SSL Certificates",
                              "type": "boolean",
                              "default": true
                         }
                    ],
                    "metadata": [
                         {
                              "id": "object_query",
                              "label": "Object Query",
                              "type": "string",
                              "help_text": "Lookup query for the object. Ex: Safe=TestSafe;Object=testAccountName123"
                         },
                         {
                              "id": "object_query_format",
                              "label": "Object Query Format",
                              "type": "string",
                              "default": "Exact",
                              "choices": [
                                   "Exact",
                                   "Regexp"
                              ]
                         },
                         {
                              "id": "reason",
                              "label": "Reason",
                              "type": "string",
                              "help_text": "Object request reason. This is only needed if it is required by the object's policy."
                         }
                    ],
                    "required": [
                         "url",
                         "app_id",
                         "object_query"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "CyberArk AIM Central Credential Provider Lookup",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "CyberArk Conjur Secret Lookup",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Conjur URL",
                              "type": "string",
                              "format": "url"
                         },
                         {
                              "id": "api_key",
                              "label": "API Key",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "account",
                              "label": "Account",
                              "type": "string"
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "cacert",
                              "label": "Public Key Certificate",
                              "type": "string",
                              "multiline": true
                         }
                    ],
                    "metadata": [
                         {
                              "id": "secret_path",
                              "label": "Secret Identifier",
                              "type": "string",
                              "help_text": "The identifier for the secret e.g., /some/identifier"
                         },
                         {
                              "id": "secret_version",
                              "label": "Secret Version",
                              "type": "string",
                              "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
                         }
                    ],
                    "required": [
                         "url",
                         "api_key",
                         "account",
                         "username"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "CyberArk Conjur Secret Lookup",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "HashiCorp Vault Secret Lookup",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Server URL",
                              "type": "string",
                              "format": "url",
                              "help_text": "The URL to the HashiCorp Vault"
                         },
                         {
                              "id": "token",
                              "label": "Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "The access token used to authenticate to the Vault server"
                         },
                         {
                              "id": "cacert",
                              "label": "CA Certificate",
                              "type": "string",
                              "multiline": true,
                              "help_text": "The CA certificate used to verify the SSL certificate of the Vault server"
                         },
                         {
                              "id": "role_id",
                              "label": "AppRole role_id",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The Role ID for AppRole Authentication"
                         },
                         {
                              "id": "secret_id",
                              "label": "AppRole secret_id",
                              "type": "string",
                              "multiline": false,
                              "secret": true,
                              "help_text": "The Secret ID for AppRole Authentication"
                         },
                         {
                              "id": "namespace",
                              "label": "Namespace name (Vault Enterprise only)",
                              "type": "string",
                              "multiline": false,
                              "help_text": "Name of the namespace to use when authenticate and retrieve secrets"
                         },
                         {
                              "id": "kubernetes_role",
                              "label": "Kubernetes role",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The Role for Kubernetes Authentication. This is the named role, configured in Vault server, for AWX pod auth policies. see https://www.vaultproject.io/docs/auth/kubernetes#configuration"
                         },
                         {
                              "id": "default_auth_path",
                              "label": "Path to Auth",
                              "type": "string",
                              "multiline": false,
                              "default": "approle",
                              "help_text": "The Authentication path to use if one isn't provided in the metadata when linking to an input field. Defaults to 'approle'"
                         },
                         {
                              "id": "api_version",
                              "label": "API Version",
                              "choices": [
                                   "v1",
                                   "v2"
                              ],
                              "help_text": "API v1 is for static key/value lookups.  API v2 is for versioned key/value lookups.",
                              "default": "v1"
                         }
                    ],
                    "metadata": [
                         {
                              "id": "secret_backend",
                              "label": "Name of Secret Backend",
                              "type": "string",
                              "help_text": "The name of the kv secret backend (if left empty, the first segment of the secret path will be used)."
                         },
                         {
                              "id": "secret_path",
                              "label": "Path to Secret",
                              "type": "string",
                              "help_text": "The path to the secret stored in the secret backend e.g, /some/secret/. It is recommended that you use the secret backend field to identify the storage backend and to use this field for locating a specific secret within that store. However, if you prefer to fully identify both the secret backend and one of its secrets using only this field, join their locations into a single path without any additional separators, e.g, /location/of/backend/some/secret."
                         },
                         {
                              "id": "auth_path",
                              "label": "Path to Auth",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The path where the Authentication method is mounted e.g, approle"
                         },
                         {
                              "id": "secret_key",
                              "label": "Key Name",
                              "type": "string",
                              "help_text": "The name of the key to look up in the secret."
                         },
                         {
                              "id": "secret_version",
                              "label": "Secret Version (v2 only)",
                              "type": "string",
                              "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
                         }
                    ],
                    "required": [
                         "url",
                         "secret_path",
                         "api_version",
                         "secret_key"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "HashiCorp Vault Secret Lookup",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "HashiCorp Vault Signed SSH",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Server URL",
                              "type": "string",
                              "format": "url",
                              "help_text": "The URL to the HashiCorp Vault"
                         },
                         {
                              "id": "token",
                              "label": "Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "The access token used to authenticate to the Vault server"
                         },
                         {
                              "id": "cacert",
                              "label": "CA Certificate",
                              "type": "string",
                              "multiline": true,
                              "help_text": "The CA certificate used to verify the SSL certificate of the Vault server"
                         },
                         {
                              "id": "role_id",
                              "label": "AppRole role_id",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The Role ID for AppRole Authentication"
                         },
                         {
                              "id": "secret_id",
                              "label": "AppRole secret_id",
                              "type": "string",
                              "multiline": false,
                              "secret": true,
                              "help_text": "The Secret ID for AppRole Authentication"
                         },
                         {
                              "id": "namespace",
                              "label": "Namespace name (Vault Enterprise only)",
                              "type": "string",
                              "multiline": false,
                              "help_text": "Name of the namespace to use when authenticate and retrieve secrets"
                         },
                         {
                              "id": "kubernetes_role",
                              "label": "Kubernetes role",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The Role for Kubernetes Authentication. This is the named role, configured in Vault server, for AWX pod auth policies. see https://www.vaultproject.io/docs/auth/kubernetes#configuration"
                         },
                         {
                              "id": "default_auth_path",
                              "label": "Path to Auth",
                              "type": "string",
                              "multiline": false,
                              "default": "approle",
                              "help_text": "The Authentication path to use if one isn't provided in the metadata when linking to an input field. Defaults to 'approle'"
                         }
                    ],
                    "metadata": [
                         {
                              "id": "public_key",
                              "label": "Unsigned Public Key",
                              "type": "string",
                              "multiline": true
                         },
                         {
                              "id": "secret_path",
                              "label": "Path to Secret",
                              "type": "string",
                              "help_text": "The path to the secret stored in the secret backend e.g, /some/secret/. It is recommended that you use the secret backend field to identify the storage backend and to use this field for locating a specific secret within that store. However, if you prefer to fully identify both the secret backend and one of its secrets using only this field, join their locations into a single path without any additional separators, e.g, /location/of/backend/some/secret."
                         },
                         {
                              "id": "auth_path",
                              "label": "Path to Auth",
                              "type": "string",
                              "multiline": false,
                              "help_text": "The path where the Authentication method is mounted e.g, approle"
                         },
                         {
                              "id": "role",
                              "label": "Role Name",
                              "type": "string",
                              "help_text": "The name of the role used to sign."
                         },
                         {
                              "id": "valid_principals",
                              "label": "Valid Principals",
                              "type": "string",
                              "help_text": "Valid principals (either usernames or hostnames) that the certificate should be signed for."
                         }
                    ],
                    "required": [
                         "url",
                         "secret_path",
                         "public_key",
                         "role"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "HashiCorp Vault Signed SSH",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "Microsoft Azure Key Vault",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Vault URL (DNS Name)",
                              "type": "string",
                              "format": "url"
                         },
                         {
                              "id": "client",
                              "label": "Client ID",
                              "type": "string"
                         },
                         {
                              "id": "secret",
                              "label": "Client Secret",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "tenant",
                              "label": "Tenant ID",
                              "type": "string"
                         },
                         {
                              "id": "cloud_name",
                              "label": "Cloud Environment",
                              "help_text": "Specify which azure cloud environment to use.",
                              "choices": [
                                   "AzureUSGovernment",
                                   "AzureCloud",
                                   "AzureChinaCloud",
                                   "AzureGermanCloud"
                              ],
                              "default": "AzureCloud"
                         }
                    ],
                    "metadata": [
                         {
                              "id": "secret_field",
                              "label": "Secret Name",
                              "type": "string",
                              "help_text": "The name of the secret to look up."
                         },
                         {
                              "id": "secret_version",
                              "label": "Secret Version",
                              "type": "string",
                              "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
                         }
                    ],
                    "required": [
                         "url",
                         "client",
                         "secret",
                         "tenant",
                         "secret_field"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Microsoft Azure Key Vault",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "Thycotic DevOps Secrets Vault",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "tenant",
                              "label": "Tenant",
                              "help_text": "The tenant e.g. \"ex\" when the URL is https://ex.secretservercloud.com",
                              "type": "string"
                         },
                         {
                              "id": "tld",
                              "label": "Top-level Domain (TLD)",
                              "help_text": "The TLD of the tenant e.g. \"com\" when the URL is https://ex.secretservercloud.com",
                              "choices": [
                                   "ca",
                                   "com",
                                   "com.au",
                                   "com.sg",
                                   "eu"
                              ],
                              "default": "com"
                         },
                         {
                              "id": "client_id",
                              "label": "Client ID",
                              "type": "string"
                         },
                         {
                              "id": "client_secret",
                              "label": "Client Secret",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "metadata": [
                         {
                              "id": "path",
                              "label": "Secret Path",
                              "type": "string",
                              "help_text": "The secret path e.g. /test/secret1"
                         }
                    ],
                    "required": [
                         "tenant",
                         "client_id",
                         "client_secret",
                         "path"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Thycotic DevOps Secrets Vault",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "Thycotic Secret Server",
               "description": "",
               "kind": "external",
               "inputs": {
                    "fields": [
                         {
                              "id": "server_url",
                              "label": "Secret Server URL",
                              "help_text": "The Base URL of Secret Server e.g. https://myserver/SecretServer or https://mytenant.secretservercloud.com",
                              "type": "string"
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "help_text": "The (Application) user username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "help_text": "The corresponding password",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "metadata": [
                         {
                              "id": "secret_id",
                              "label": "Secret ID",
                              "help_text": "The integer ID of the secret",
                              "type": "string"
                         },
                         {
                              "id": "secret_field",
                              "label": "Secret Field",
                              "help_text": "The field to extract from the secret",
                              "type": "string"
                         }
                    ],
                    "required": [
                         "server_url",
                         "username",
                         "password",
                         "secret_id",
                         "secret_field"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Thycotic Secret Server",
                    "kind": "external",
                    "type": "credential_type"
               }
          },
          {
               "name": "Ansible Galaxy/Automation Hub API Token",
               "description": "",
               "kind": "galaxy",
               "inputs": {
                    "fields": [
                         {
                              "id": "url",
                              "label": "Galaxy Server URL",
                              "type": "string",
                              "help_text": "The URL of the Galaxy instance to connect to."
                         },
                         {
                              "id": "auth_url",
                              "label": "Auth Server URL",
                              "type": "string",
                              "help_text": "The URL of a Keycloak server token_endpoint, if using SSO auth."
                         },
                         {
                              "id": "token",
                              "label": "API Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "A token to use for authentication against the Galaxy instance."
                         }
                    ],
                    "required": [
                         "url"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               }
          },
          {
               "name": "Insights",
               "description": "",
               "kind": "insights",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "required": [
                         "username",
                         "password"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "scm_username": "{{username}}",
                         "scm_password": "{{password}}"
                    },
                    "env": {
                         "INSIGHTS_USER": "{{username}}",
                         "INSIGHTS_PASSWORD": "{{password}}"
                    }
               },
               "natural_key": {
                    "name": "Insights",
                    "kind": "insights",
                    "type": "credential_type"
               }
          },
          {
               "name": "OpenShift or Kubernetes API Bearer Token",
               "description": "",
               "kind": "kubernetes",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "OpenShift or Kubernetes API Endpoint",
                              "type": "string",
                              "help_text": "The OpenShift or Kubernetes API Endpoint to authenticate with."
                         },
                         {
                              "id": "bearer_token",
                              "label": "API authentication bearer token",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "verify_ssl",
                              "label": "Verify SSL",
                              "type": "boolean",
                              "default": true
                         },
                         {
                              "id": "ssl_ca_cert",
                              "label": "Certificate Authority data",
                              "type": "string",
                              "secret": true,
                              "multiline": true
                         }
                    ],
                    "required": [
                         "host",
                         "bearer_token"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "OpenShift or Kubernetes API Bearer Token",
                    "kind": "kubernetes",
                    "type": "credential_type"
               }
          },
          {
               "name": "Network",
               "description": "",
               "kind": "net",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "ssh_key_data",
                              "label": "SSH Private Key",
                              "type": "string",
                              "format": "ssh_private_key",
                              "secret": true,
                              "multiline": true
                         },
                         {
                              "id": "ssh_key_unlock",
                              "label": "Private Key Passphrase",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "authorize",
                              "label": "Authorize",
                              "type": "boolean"
                         },
                         {
                              "id": "authorize_password",
                              "label": "Authorize Password",
                              "type": "string",
                              "secret": true
                         }
                    ],
                    "dependencies": {
                         "authorize_password": [
                              "authorize"
                         ]
                    },
                    "required": [
                         "username"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Network",
                    "kind": "net",
                    "type": "credential_type"
               }
          },
          {
               "name": "Container Registry",
               "description": "",
               "kind": "registry",
               "inputs": {
                    "fields": [
                         {
                              "id": "host",
                              "label": "Authentication URL",
                              "type": "string",
                              "help_text": "Authentication endpoint for the container registry.",
                              "default": "quay.io"
                         },
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password or Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "A password or token used to authenticate with"
                         },
                         {
                              "id": "verify_ssl",
                              "label": "Verify SSL",
                              "type": "boolean",
                              "default": true
                         }
                    ],
                    "required": [
                         "host"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Container Registry",
                    "kind": "registry",
                    "type": "credential_type"
               }
          },
          {
               "name": "Source Control",
               "description": "",
               "kind": "scm",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true
                         },
                         {
                              "id": "ssh_key_data",
                              "label": "SCM Private Key",
                              "type": "string",
                              "format": "ssh_private_key",
                              "secret": true,
                              "multiline": true
                         },
                         {
                              "id": "ssh_key_unlock",
                              "label": "Private Key Passphrase",
                              "type": "string",
                              "secret": true
                         }
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Source Control",
                    "kind": "scm",
                    "type": "credential_type"
               }
          },
          {
               "name": "Machine",
               "description": "",
               "kind": "ssh",
               "inputs": {
                    "fields": [
                         {
                              "id": "username",
                              "label": "Username",
                              "type": "string"
                         },
                         {
                              "id": "password",
                              "label": "Password",
                              "type": "string",
                              "secret": true,
                              "ask_at_runtime": true
                         },
                         {
                              "id": "ssh_key_data",
                              "label": "SSH Private Key",
                              "type": "string",
                              "format": "ssh_private_key",
                              "secret": true,
                              "multiline": true
                         },
                         {
                              "id": "ssh_public_key_data",
                              "label": "Signed SSH Certificate",
                              "type": "string",
                              "multiline": true,
                              "secret": true
                         },
                         {
                              "id": "ssh_key_unlock",
                              "label": "Private Key Passphrase",
                              "type": "string",
                              "secret": true,
                              "ask_at_runtime": true
                         },
                         {
                              "id": "become_method",
                              "label": "Privilege Escalation Method",
                              "type": "string",
                              "help_text": "Specify a method for \"become\" operations. This is equivalent to specifying the --become-method Ansible parameter."
                         },
                         {
                              "id": "become_username",
                              "label": "Privilege Escalation Username",
                              "type": "string"
                         },
                         {
                              "id": "become_password",
                              "label": "Privilege Escalation Password",
                              "type": "string",
                              "secret": true,
                              "ask_at_runtime": true
                         }
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Machine",
                    "kind": "ssh",
                    "type": "credential_type"
               }
          },
          {
               "name": "GitHub Personal Access Token",
               "description": "",
               "kind": "token",
               "inputs": {
                    "fields": [
                         {
                              "id": "token",
                              "label": "Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "This token needs to come from your profile settings in GitHub"
                         }
                    ],
                    "required": [
                         "token"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "GitHub Personal Access Token",
                    "kind": "token",
                    "type": "credential_type"
               }
          },
          {
               "name": "GitLab Personal Access Token",
               "description": "",
               "kind": "token",
               "inputs": {
                    "fields": [
                         {
                              "id": "token",
                              "label": "Token",
                              "type": "string",
                              "secret": true,
                              "help_text": "This token needs to come from your profile settings in GitLab"
                         }
                    ],
                    "required": [
                         "token"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "GitLab Personal Access Token",
                    "kind": "token",
                    "type": "credential_type"
               }
          },
          {
               "name": "Vault",
               "description": "",
               "kind": "vault",
               "inputs": {
                    "fields": [
                         {
                              "id": "vault_password",
                              "label": "Vault Password",
                              "type": "string",
                              "secret": true,
                              "ask_at_runtime": true
                         },
                         {
                              "id": "vault_id",
                              "label": "Vault Identifier",
                              "type": "string",
                              "format": "vault_id",
                              "help_text": "Specify an (optional) Vault ID. This is equivalent to specifying the --vault-id Ansible parameter for providing multiple Vault passwords.  Note: this feature only works in Ansible 2.4+."
                         }
                    ],
                    "required": [
                         "vault_password"
                    ]
               },
               "injectors": {},
               "natural_key": {
                    "name": "Vault",
                    "kind": "vault",
                    "type": "credential_type"
               }
          }
     ]
}
