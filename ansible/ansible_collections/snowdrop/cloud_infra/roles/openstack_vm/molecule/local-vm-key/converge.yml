---
- name: Converge
  hosts: localhost
  gather_facts: false

  # pre_tasks:
  #   - name: "Set test facts"
  #     ansible.builtin.set_fact:
  #       vm_name: ansible_molecule_snowdrop_openstack_test

  #   - name: "Set openstack VM required facts"
  #     ansible.builtin.set_fact:
  #       openstack: 
  #         vm: 
  #           network: "provider_net_shared"
  #           image: "Fedora-Cloud-Base-35"
  #           flavor: "m1.medium"

  #   - name: "Set openstack_auth facts"
  #     ansible.builtin.set_fact:
  #       openstack_auth: 
  #         openstack_project_name: "{{ query('passwordstore', 'openstack/host/project_name')[0] }}"
  #         openstack_console_user:  "{{ query('passwordstore', 'openstack/host/console_user')[0] }}"
  #         openstack_console_password: "{{ query('passwordstore', 'openstack/host/console_pw')[0] }}"
  #         openstack_user_domain:  "{{ query('passwordstore', 'openstack/host/console_domain')[0] }}"
  #         openstack_project_domain: "{{ query('passwordstore', 'openstack/host/os_domain')[0] }}"
  #         openstack_os_auth_url: "{{ query('passwordstore', 'openstack/host/os_auth_url')[0] }}"

  tasks:
    - name: "Include openstack_vm role"
      ansible.builtin.include_role:
        name: "openstack_vm"

    # - name: "Create VM"
    #   ansible.builtin.include_role:
    #     name: "openstack.vm"
    #   vars: 
    #     state: "present"

    # - name: "Wait for connection to host"
    #   ansible.builtin.wait_for:
    #     host: "{{ openstack_vm_ipv4 }}"
    #     port: "22"
    #     timeout: 120
    #   register: wait_for_connection_reg

    # - name: "Get VM information"
    #   openstack.cloud.server_info:
    #     auth:
    #       project_name: "{{ openstack_auth.openstack_project_name }}"
    #       username: "{{ openstack_auth.openstack_console_user }}"
    #       password: "{{ openstack_auth.openstack_console_password }}"
    #       user_domain_name: "{{ openstack_auth.openstack_user_domain }}"
    #       project_domain_name: "{{ openstack_auth.openstack_project_domain }}"
    #       auth_url: "{{ openstack_auth.openstack_os_auth_url }}"
    #     name: "{{ vm_name }}"
    #   register: openstack_server_info_output

    # - name: "Print OpenStack server information"
    #   ansible.builtin.debug:
    #     var: openstack_server_info_output

    # - name: "Delete OpenStack VM"
    #   ansible.builtin.include_role:
    #     name: "openstack.vm"
    #   vars: 
    #     state: "absent"

    # - name: "Delete host from known hosts"
    #   ansible.builtin.known_hosts:
    #     name: "{{ hostvars[vm_name]['ansible_ssh_host'] }}"
    #     state: absent
    #   when: "hostvars[vm_name]['ansible_ssh_host'] is defined"
    #   failed_when: false

    # - name: "Validate OpenStack server info"
    #   ansible.builtin.assert:
    #     that:
    #       - openstack_server_info_output.servers | length == 1
    #       - openstack_server_info_output.servers[0].access_ipv4 == openstack_vm_ipv4
    #       - openstack_server_info_output.servers[0].flavor.name == openstack.vm.flavor
    #       - openstack_server_info_output.servers[0].key_name == 'test-adm-key'
...
