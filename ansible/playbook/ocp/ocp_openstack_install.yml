---
- name: "Build OpenStack authentication for v3password"
  ansible.builtin.import_playbook: "../openstack/openstack_auth_passstore_v3password.yml"

- name: "Install OCP"
  hosts: localhost
  gather_facts: true
  vars:
    ansible_remote_tmp: /tmp

  tasks:
    - name: "Deploy OCP"
      ansible.builtin.import_role:
        name: 'ocp_cluster'
      vars:
        state: present

  post_tasks:

    - name: "Executing the post-installation steps"
      ansible.builtin.debug:
        msg:
          - "Executing the post installation steps. If it fails these steps can be executed manually:"
          - "$ ansible-playbook -i inventory/ ansible/playbook/ocp/ocp_openstack_install_post.yml -e tmp_directory={{ ocp_cluster.tmp_directory }} -e ocp_root_directory={{ ocp_cluster.ocp_root_directory }} -e ocp_cluster_name={{ ocp_cluster_name }}"

  #   - name: "Base64 encode OCP installation folder"
  #     ansible.builtin.set_fact:
  #       ansible_installation_folder_base64: "{{ lookup('ansible.builtin.file', ocp_cluster.tmp_directory + '/' + ocp_cluster_name + '-data.tar.gz') | b64encode }}"

  #   - name: "Store the OCP installation folder on the passwordstore"
  #     ansible.builtin.set_fact:
  #       ansible_installation_folder_passwordstore: "{{ query('passwordstore', 'openstack/' + ocp_cluster.metadata. + '/install_dir create=True userpass=' + ansible_installation_folder_base64 )[0] }}"

- name: "Post deployment steps"
  ansible.builtin.import_playbook: "ocp_openstack_install_post.yml"

- name: "Deploy Jump Server"
  ansible.builtin.import_playbook: "ocp_openstack_create_jump_server.yml"
  vars:
    vm_name: "{{ ocp_cluster_metadata.infraID }}-jump-server"
...
# ansible-playbook ansible/playbook/ocp/ocp_openstack_install.yml -e ocp_root_directory=/opt/ocp -e ocp_cluster_name=ocp-sdev -e openshift_pull_secret=${OCP_PULL_SECRET} -K
