---
# Variables:
#  - "vm_name": "n311-test"

# tag::instanciate_rhos_auth[]
- name: "Instanciate RHOS authentication"
  ansible.builtin.import_playbook: "openstack_auth_passstore_v3password.yml"
  vars:
    vm_user: "snowdrop"
    pass_provider: "openstack"
# end::instanciate_rhos_auth[]

- name: "Refresh inventory"
  hosts: localhost
  gather_facts: True

  tasks:
    - name: Refresh the inventory so the newly added host is available
      meta: refresh_inventory

    - name: "Post create actions"
      ansible.builtin.debug:
        msg: 
          - "Next step is adding the host to the controller known hosts."
          - "If it fails, because the VM is not started yet, it can be executed again manualy using the following command:"
          - ""
          - "ansible-playbook ansible/playbook/openstack/openstack_vm_create_post_passwordstore.yml -e vm_name={{ vm_name }}"

    - name: "Add host to known hosts {{ hostvars[vm_name]['ansible_ssh_host'] }}"
      ansible.builtin.known_hosts:
        name: "{{ hostvars[vm_name]['ansible_ssh_host'] }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[vm_name].ansible_ssh_host }}') }}"
        hash_host: true

- name:  "Wait for the VM to boot and we can ssh"
  hosts: "{{ vm_name }}"
  gather_facts: no

  tasks:
    - name: "Show 'Wait for connection to host' output"
      debug:
        msg: 
          - "ip : {{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host')[0] }}"
          - "port : {{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_port')[0] }}"

    - name: "Wait for connection to host"
      ansible.builtin.wait_for:
        host: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host')[0] }}"
        port: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_port')[0] }}"
        timeout: 120
      register: wait_for_connection_reg

  post_tasks:
    - name: "DON'T FORGET TO SECURE YOUR SERVER"
      debug:
        msg: "Trying to start start server securization automatically For manual execution: $ ansible-playbook ansible/playbook/sec_host.yml -e vm_name={{ vm_name }} -e provider=openstack"

- name: "Openstack VM init"
  hosts: "{{ vm_name }}"
  gather_facts: yes

  roles:
    - role: "openstack/init_vm"

- name: "Secure new server"
  import_playbook: "../sec_host.yml"
  vars:
    provider: "openstack"
    hosts: "{{ vm_name }}"
    vm_name: "{{ vm_name }}"
  tags: [always]
...
