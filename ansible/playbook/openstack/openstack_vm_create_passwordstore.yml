---
# Variables:
#  - "vm_name": "n311-test"
#  - "openstack": {
#      "vm": {
#        "network": "provider_net_shared"
#      }
#    }}
#  . k8s_type: Kubernetes host type [masters,nodes], empty for no k8s installation
#  . k8s_version: Kubernetes version [117 ... 121], empty for no k8s installation

- name: "Init passwordstore on controller"
  ansible.builtin.import_playbook: "../passstore/passstore_controller_init.yml"
  vars:
    pass_provider: "openstack"
    
- name: "Validate passwordstore"
  ansible.builtin.import_playbook: "../passstore/passstore_controller_check.yml"

# tag::initialize_passwordstore_inventory[]
- name: "Initialize passwordstore inventory"
  ansible.builtin.import_playbook: "../passstore/passstore_controller_inventory.yml"
  vars:
    vm_user: "snowdrop"
    pass_provider: "openstack"
# end::initialize_passwordstore_inventory[]

# tag::instanciate_rhos_auth[]
- name: "Instanciate RHOS authentication"
  ansible.builtin.import_playbook: "openstack_auth_passstore_v3password.yml"
  vars:
    vm_user: "snowdrop"
    pass_provider: "openstack"
# end::instanciate_rhos_auth[]

- name: "Openstack VM create"
  hosts: localhost
  gather_facts: True

  tasks:
    # outputs: 
    #   . openstack_vm_ipv4
    #   . openstack_output
    - name: "Execute create inventory, if tagged as so"
      ansible.builtin.include_role:
        name: "snowdrop.cloud_infra.openstack_vm"
        apply:
          tags:
            - always
      vars: 
        state: "present"

  post_tasks:
    - name: "Print VM IP address"
      ansible.builtin.debug:
        msg: 
        - "openstack_output: {{ openstack_output }}"
        - "openstack_output.server: {{ openstack_output.server }}"
        - "openstack_output.server.admin_password: {{ openstack_output.server.admin_password }}"
        - "openstack_vm_ipv4: {{ openstack_vm_ipv4 }}"
        - "VM IPV4: {{ openstack_output.server.addresses[ openstack.vm.network ][0].addr }}"
        - "key name: {{ openstack_output.server.key_name }}"
        
    - name: "Store Host information on passwordstore"
      ansible.builtin.set_fact:
        openstack_vm_ipv4: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host create=True userpass=' + openstack_vm_ipv4 )[0] }}"
        openstack_vm_ssh_port: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_port create=True userpass=22')[0] }}"
        openstack_vm_ssh_user: "{{ query('passwordstore', 'openstack/' + vm_name + '/os_user create=True userpass=snowdrop')[0] }}"

    - name: "Store optional Host information on passwordstore"
      ansible.builtin.set_fact:
        openstack_vm_admin_password: "{{ query('passwordstore', 'openstack/' + vm_name + '/admin_password create=True userpass=' + openstack_output.server.admin_password)[0] }}"
      when: openstack_output is defined and openstack_output.server is defined and openstack_output.server.admin_password is defined and openstack_output.server.admin_password

    - name: Refresh the inventory so the newly added host is available
      meta: refresh_inventory

- name:  "Wait for the VM to boot and we can ssh"
  hosts: "{{ vm_name | default([]) }}"
  gather_facts: no

  tasks:

    - name: "Wait for connection to host"
      ansible.builtin.wait_for:
        host: "{{ query('passwordstore', 'openstack/' + inventory_hostname + '/ansible_ssh_host')[0] }}"
        port: "{{ query('passwordstore', 'openstack/' + inventory_hostname + '/ansible_ssh_port')[0] }}"
        timeout: 120
      vars:
        ansible_connection: local
      register: wait_for_connection_reg
      when: skip_post_installation is undefined or not skip_post_installation

  post_tasks:
    - name: "DON'T FORGET TO SECURE YOUR SERVER"
      ansible.builtin.debug:
        msg: 
          - "DON'T FORGET TO SECURE YOUR SERVER!!!"
          - ""
          - "Trying to start start server securization automatically."
          - "For manual execution: $ ansible-playbook ansible/playbook/sec_host.yml -e vm_name={{ vm_name }} -e provider=openstack"

- name: "Add to known hosts"
  hosts: localhost
  gather_facts: True

  tasks:
    - name: "Add host to known hosts {{ hostvars[vm_name]['ansible_ssh_host'] }}"
      ansible.builtin.known_hosts:
        name: "{{ hostvars[vm_name]['ansible_ssh_host'] }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[vm_name].ansible_ssh_host }}') }}"
        hash_host: true
      when: skip_post_installation is undefined or not skip_post_installation

- name: "Openstack VM init"
  hosts: "{{ vm_name | default([]) }}"
  gather_facts: "{{ vm_name is defined and (not skip_post_installation is defined or not skip_post_installation) }}"

  tasks:
    - name: Init RHOS VM
      ansible.builtin.include_role:
        name: "openstack/init_vm"
      when: skip_post_installation is undefined or not skip_post_installation

- name: "Secure new server"
  ansible.builtin.import_playbook: "../sec_host.yml"
  vars:
    provider: "openstack"
    # hosts: "{{ vm_name | default([]) }}"
  tags: [always]
  when: skip_post_installation is undefined or not skip_post_installation
...
