---
# Variables:
#  - "vm_name": "n311-test"
#  - "openstack": {
#      "vm": {
#        "network": "provider_net_shared"
#      }
#    }}
#  . k8s_type: Kubernetes host type [masters,nodes], empty for no k8s installation
#  . k8s_version: Kubernetes version [117 ... 121], empty for no k8s installation

- name: "Validate passwordstore"
  ansible.builtin.import_playbook: "../passstore/passstore_controller_check.yml"

# tag::initialize_passwordstore_inventory[]
- name: "Initialize passwordstore inventory"
  ansible.builtin.import_playbook: "../passstore/passstore_controller_inventory.yml"
  vars:
    vm_user: "snowdrop"
    pass_provider: "openstack"
# end::initialize_passwordstore_inventory[]

# tag::instanciate_rhos_auth[]
- name: "Instanciate RHOS authentication"
  ansible.builtin.import_playbook: "openstack_auth_passstore_v3password.yml"
  vars:
    vm_user: "snowdrop"
    pass_provider: "openstack"
# end::instanciate_rhos_auth[]

- name: "Openstack VM create"
  hosts: localhost
  gather_facts: True

  tasks:
    # outputs: 
    #   . openstack_vm_ipv4
    #   . openstack_output
    - name: "Execute create inventory, if tagged as so"
      ansible.builtin.include_role:
        name: "snowdrop.cloud_infra.openstack_vm"
        apply:
          tags:
            - always
      vars: 
        state: "present"

  post_tasks:
    - name: "Store host IP on passwordstore"
      set_fact:
        openstack_vm_ipv4: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host create=True userpass=' + openstack_vm_ipv4 )[0] }}"

- name: "Execute post create actions"
  ansible.builtin.import_playbook: "openstack_vm_create_post_passwordstore.yml"
...
