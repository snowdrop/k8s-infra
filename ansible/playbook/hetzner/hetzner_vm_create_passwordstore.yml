---
# file: hetzner_vm_create_passwordstore.yml
# Required variables:
#   - vm_name
#   - k8s_type: Kubernetes group [masters]
#   - k8s_version: Kubernetes Version [119]
#   - salt_text: Salt to be used on database creation, e.g.=$(gpg --gen-random --armor 1 20)
- name:  "Load Hetzner default variables"
  hosts: localhost
  gather_facts: no
  
  tasks:
    - name: "Load default Hetzner variables"
      import_tasks: hetzner_vars.yml

- name: "Initialize passwordstore inventory"
  import_playbook: "../passstore/passstore_controller_inventory.yml"
  vars:
    pass_provider: "hetzner"

# Optional variables:
- name:  "Get public key"
  hosts: localhost
  gather_facts: no
  
  tasks:
    - name: "Get generated user password from pass"
      set_fact:
        user_pw: "{{ lookup('passwordstore', 'hetzner/' + vm_name + '/os_password' ) }}"

    - name: "Get server public key from pass"
      set_fact:
        vm_public_key: "{{ lookup('passwordstore', 'hetzner/' + vm_name + '/id_rsa.pub' ) }}"
        vm_key_name: "{{ vm_name }}"
      when: "use_generic_ssh_key is defined and not ( use_generic_ssh_key | bool ) and override_public_key is not defined"

    - name: "Get override server public key from file"
      set_fact:
        vm_public_key: "{{ lookup('file', override_public_key ) }}"
        vm_key_name: "{{ vm_name }}"
      when: "use_generic_ssh_key is defined and not ( use_generic_ssh_key | bool ) and override_public_key is defined"
    
    - name: "Print group information"
      debug: 
        msg: "hetzner: {{ groups['hetzner'] }}"

    - name: "Get generic server public key from pass"
      set_fact:
        vm_key_name: "generic-key"
        vm_public_key: "{{ lookup('passwordstore', 'hetzner/id_rsa.pub' ) }}"
      when: "use_generic_ssh_key is not defined or ( use_generic_ssh_key | bool )"
  
- name: "Create SSH Key for server"
  import_playbook: "hetzner_ssh_key_create.yml"
  when: "use_generic_ssh_key is defined and not ( use_generic_ssh_key | bool )"
  

- name:  "Get Passwordstore user information"
  hosts: localhost
  gather_facts: no
  
  tasks:
    - name: "Get user password from pass"
      set_fact:
        pass_user_pw: "{{ query('passwordstore', 'hetzner/'+vm_name+'/os_password')[0] }}"
        user_pw: "{{ query('passwordstore', 'hetzner/'+vm_name+'/os_password')[0] }}"
      

- name: "Create Server on Hetzner"
  import_playbook: "hetzner_vm_create.yml"
  vars:
    hetzner_context_name: "snowdrop"
    user_pw: "{{ pass_user_pw }}"
  

- name: "Secure new server"
  import_playbook: "../sec_host.yml"
  vars:
    provider: "hetzner"
    hosts: "{{ vm_name }}"
    vm_name: "{{ vm_name }}"
  

...
