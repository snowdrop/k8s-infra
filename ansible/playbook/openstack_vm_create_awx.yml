---
- name: "Gather OpenStack credentials"
  hosts: localhost
  gather_facts: True
  vars:
    config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
    # key_path: "/tmp/admin_key.pub"

  pre_tasks:
    # - name: "Set openstack_auth facts"
    #   set_fact:
    #     key_path: "/tmp/admin_key.pub"

    # - name: "Fetch SSH public key"
    #   shell: "ssh-add -L | head -n 1"
    #   register: ssh_pub
    
    # - name: "Write SSH Public Key to file"
    #   copy: 
    #     content: "{{ ssh_pub }}"
    #     dest: "{{ key_path }}"

    - name: "Print variables"
      debug: 
        msg: "{{ item }}"
      with_items:
        - "ansible_env: {{ ansible_env }}"
        - "localhost: {{ hostvars['localhost'] | to_yaml }}"
        - "VM: {{ hostvars[vm_name] | to_yaml }}"
        - "ssh_pub: {{ ssh_pub }}"
        
    - name: "Confirm the Config File exists"
      stat: path="{{ config_file }}"
      register: st

    - name: "Load config file contents"
      include_vars: "{{ config_file }}"
      when: st.stat.exists and st.stat.isreg

  tasks:
    - name: "Set openstack_auth facts"
      set_fact:
        openstack_auth: 
          openstack_project_name: "{{ clouds.devstack.auth.project_name }}"
          openstack_console_user:  "{{ clouds.devstack.auth.username }}"
          openstack_console_password: "{{ clouds.devstack.auth.password }}"
          openstack_user_domain:  "{{ clouds.devstack.auth.domain_name }}"
          openstack_project_domain: "{{ clouds.devstack.auth.project_domain_name }}"
          openstack_os_auth_url: "{{ clouds.devstack.auth.auth_url }}"

- name: "Create Server on Openstack"
  import_playbook: "openstack_vm_create.yml"
  vars: 
    openstack:
      vm:
        image: "{{ openstack_vm_image }}"
        flavor: "{{ openstack_vm_flavor }}"

- name: "Openstack VM create"
  hosts: localhost
  gather_facts: True
  vars:
    controller_host: "{{ lookup('env', 'AWX_DEMO_SERVICE_PORT_80_TCP_ADDR') }}"
    controller_port: "{{ lookup('env', 'AWX_DEMO_SERVICE_PORT_80_TCP_PORT') }}"
    ssh_key_data: "{{ lookup('file', key_path) }}"
    ssh_key_data_pub: "{{ lookup('file', key_path + '.pub') }}"
    os_user_name:  "{{ openstack_vm_image | regex_search('^[a-zA-Z]*') | lower }}"

  pre_tasks:
    - name: "Print variables"
      debug: 
        msg: "{{ item }}"
      with_items:
        - "os_user_name: {{ os_user_name }}"
        - "key_path: {{ key_path }}"
        - "ssh_key_data: {{ ssh_key_data }}"
        - "ssh_key_data_pub: {{ ssh_key_data_pub }}"

    # - name: "Load config file contents"
    #   include_vars: "{{ config_file }}"
    #   when: st.stat.exists and st.stat.isreg

  tasks:

    - name: "Add user credentials to AWX as machine credential"
      awx.awx.credential:
        name: "openstack-{{ vm_name }}"
        description: "User for {{ vm_name }} OpenStack VM."
        organization: "Default"
        credential_type: "Machine"
        state: present
        controller_oauthtoken: "{{ controller_oauthtoken }}"
        controller_username: "{{ awx_user_name }}"
        controller_host: "http://{{controller_host }}:{{ controller_port }}"
        inputs:
          username: "{{ os_user_name }}"
          ssh_key_data: "{{ lookup('file', key_path) }}"

# - name: "Secure new server"
#   import_playbook: "sec_host.yml"
#   vars:
#     provider: "openstack"
#     hosts: "{{ vm_name }}"
#     vm_name: "{{ vm_name }}"
...