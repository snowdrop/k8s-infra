---

- name: "Gather OpenStack credentials"
  hosts: localhost
  gather_facts: True
  vars:
    config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"

  pre_tasks:
    - name: "Confirm the Config File exists"
      stat: path="{{ config_file }}"
      register: st

    - name: "Load config file contents"
      include_vars: "{{ config_file }}"
      when: st.stat.exists and st.stat.isreg

  tasks:
    - name: "Set openstack_auth facts"
      set_fact:
        openstack_auth: 
          openstack_project_name: "{{ clouds.devstack.auth.project_name }}"
          openstack_console_user:  "{{ clouds.devstack.auth.username }}"
          openstack_console_password: "{{ clouds.devstack.auth.password }}"
          openstack_user_domain:  "{{ clouds.devstack.auth.domain_name }}"
          openstack_project_domain: "{{ clouds.devstack.auth.project_domain_name }}"
          openstack_os_auth_url: "{{ clouds.devstack.auth.auth_url }}"  

- name: "Create Server on Openstack"
  import_playbook: "openstack_vm_create.yml"
  vars: 
    openstack:
      vm:
        image: "{{ openstack_vm_image }}"
        flavor: "{{ openstack_vm_flavor }}"
    # openstack_auth: "{{ openstack_auth }}"

- name: "Openstack VM create"
  hosts: localhost
  gather_facts: True
  vars:
    controller_host: "{{ lookup('env', 'AWX_DEMO_SERVICE_PORT_80_TCP_ADDR') }}"
    controller_port: "{{ lookup('env', 'AWX_DEMO_SERVICE_PORT_80_TCP_PORT') }}"
    
  tasks:
    - name: "Add user credentials to AWX as machine credential"
      awx.awx.credential:
        name: "openstack-{{ vm_name }}"
        description: "User for {{ vm_name }} OpenStack VM."
        organization: "Default"
        credential_type: "Machine"
        state: present
        controller_oauthtoken: "{{ controller_oauthtoken }}"
        controller_username: "{{ awx_user_name }}"
        controller_host: "http://{{controller_host }}:{{ controller_port }}"
        inputs:
          username: "centos"
          ssh_key_data: "{{ lookup('file', key_path) }}"

# - name: "Secure new server"
#   import_playbook: "sec_host.yml"
#   vars:
#     provider: "openstack"
#     hosts: "{{ vm_name }}"
#     vm_name: "{{ vm_name }}"
...