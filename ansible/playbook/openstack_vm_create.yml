---
# Variables:
#  - "hostname": "n311-test"
#  - "openstack": {
#      "os_username": "'$(pass show openstack/host/console_user)'"
#      "os_password": "'$(pass show openstack/host/console_pw)'"
#      "os_domain":  "'$(pass show openstack/host/console_domain)'"
#      "os_auth_url": "https://rhos-d.infra.prod.upshift.rdu2.redhat.com:13000/v3/"
#      "vm": {
#        "network": "provider_net_shared"
#        "security_group": "spring-boot"
#        "flavor": "ci.m5.large"
#        "volumes" : ["test-volume"]
#      }
#    }}
# - name: "Validate passwordstore"
#   import_playbook: "passstore_controller_check.yml"
#   when: "passwordstore_enabled is not defined or (passwordstore_enabled | bool == true)"

- name: "Openstack VM create"
  hosts: localhost
  gather_facts: no

  pre_tasks:
    - name: "Print variables"
      debug:
        msg: "{{ item }}"
      with_items: 
        - "hostvars[inventory_hostname]: {{ hostvars[inventory_hostname] }}"
        - "ansible_env: {{ ansible_env }}"

  tasks:
    # - name: "Set facts"
    #   set_fact:
    #     openstack_auth.openstack_project_name: 
    #     openstack_auth.openstack_console_user:     "{{ query('passwordstore', 'openstack/host/console_user' )[0] }}"
    #     openstack_auth.openstack_console_password: "{{ query('passwordstore', 'openstack/host/console_pw ')[0] }}"
    #     openstack_auth.openstack_user_domain:        "{{ query('passwordstore', 'openstack/host/console_domain ')[0] }}"
    #     openstack_auth.openstack_project_domain: "{{ query('passwordstore', 'openstack/host/os_auth_url')[0] }}"
    #     openstack_security_group: "{{ query('passwordstore', 'openstack/host/security_group')[0] }}"

    - name: "Execute create inventory, if tagged as so"
      include_role:
        name: "openstack/vm"
        apply:
          tags:
            - always
      vars: 
        state: "present"

  post_tasks:
    - name: Refresh the inventory so the newly added host is available
      meta: refresh_inventory

- name:  "Wait for the VM to boot and we can ssh"
  hosts: "{{ vm_name }}"
  gather_facts: no

  tasks:
    - name: "Show 'Wait for connection to host' output"
      debug:
        msg: 
          - "ip : {{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host')[0] }}"
          - "port : {{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_port')[0] }}"

    - name: "Wait for connection to host"
      ansible.builtin.wait_for:
        host: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host')[0] }}"
        port: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_port')[0] }}"
        timeout: 120
      register: wait_for_connection_reg

  post_tasks:
    - name: "DON'T FORGET TO SECURE YOUR SERVER"
      debug:
        msg: "Trying to start start server securization automatically For manual execution: $ ansible-playbook ansible/playbook/sec_host.yml -e vm_name={{ vm_name }} -e provider=openstack"

- name: "Openstack VM init"
  hosts: "{{ vm_name }}"
  gather_facts: yes

  roles:
    - role: "openstack/init_vm"

...