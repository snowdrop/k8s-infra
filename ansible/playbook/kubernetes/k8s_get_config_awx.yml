---
- name: "Fetch configuration"
  hosts: "{{ vm_name }}"

  tasks:
    - name: "Fetch kubernetes configuration"
      shell: "cat /etc/kubernetes/admin.conf"
      become: yes
      register: k8s_config

    - name: "Fetch kubernetes dashboard token"
      shell: |
        kubectl -n kubernetes-dashboard get secret admin-user-token-pdfg9 -o jsonpath='{.data.token}' | base64 --decode
      register: k8s_dashboard_token

- name: "Notify executioner"
  hosts: localhost
  gather_facts: True
  vars:
    config_file: "{{ lookup('env', 'SMTP_CONFIG_FILE') }}"

  pre_tasks:
    - name: "Confirm the Config File exists"
      stat: path="{{ config_file }}"
      register: st

    - name: "Cat config file contents"
      shell: "cat {{ config_file }}"
      when: st.stat.exists and st.stat.isreg
      register: cat_output

    - name: "Print config file contents"
      debug: 
        msg: "cat_output: {{ cat_output }}"
      when: "cat_output is defined"

    - name: "Load config file contents"
      include_vars: "{{ config_file }}"
      when: st.stat.exists and st.stat.isreg

  tasks:
    - name: "Notify k8s config"
      community.general.mail:
        host: "{{ snowdrop.smtp.host }}"
        port: "{{ snowdrop.smtp.port }}"
        subject: "Kubernetes config for {{ vm_name }}"
        body: "{{ k8s_config.stdout }}"
        from: "{{ snowdrop.smtp.from }}"
        to: "{{ awx_user_email }}"
        # cc: "{{ snowdrop.smtp.cc }}"
        charset: utf8
      # delegate_to: localhost

    - name: "Notify k8s dashboard token"
      community.general.mail:
        host: "{{ snowdrop.smtp.host }}"
        port: "{{ snowdrop.smtp.port }}"
        subject: "Kubernetes dashboard for {{ vm_name }}"
        body: "{{ k8s_dashboard_token_res.stdout }}"
        from: "{{ snowdrop.smtp.from }}"
        to: "{{ awx_user_email }}"
        # cc: "{{ snowdrop.smtp.cc }}"
        charset: utf8
      # delegate_to: localhost
      when: "k8s_dashboard_token is defined"

...