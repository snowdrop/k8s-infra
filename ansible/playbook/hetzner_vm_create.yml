---
# file: hetzner-create-server.yml
# Optional variables:
- name:  "Create Hetzner server Playbook"
  hosts: localhost
  gather_facts: no
  # vars_prompt:
  #   - name: vm_name
  #     prompt: Name of the VM being created [vm_name]
  #     private: no

  #   - name: salt_text
  #     prompt: Salt
  #     private: yes

  pre_tasks:
    - name: Refresh the inventory
      meta: refresh_inventory

    - name: "Validate required variables"
      assert:
        that:
          - "vm_name is defined"
          - "salt_text is defined"
        fail_msg: "'vm_name' and 'salt_text' must be defined"

    - name: "Validate host is initialized in passwordstore"
      assert:
        that:
          - "hostvars[vm_name] is defined"
        fail_msg: "Host must be initialized in the passwordstore. Run 'ansible-playbook ansible/playbook/passstore_controller_inventory.yml -e vm_name={{ vm_name }} -e pass_provider=hetzner -e k8s_type=masters -e k8s_version=121 -e operation=create'"

    - name: Get vm host vars
      set_fact:
        my_hostvars: "{{ hostvars[vm_name] }}"

    - name: Set default hetzner_context_name if it is not defined
      set_fact:
        hetzner_context_name: "snowdrop"
      when: hetzner_context_name is not defined

    - name: "Pull pass git database"
      shell: "git pull"
      args:
        chdir: "{{ lookup('env', 'PASSWORD_STORE_DIR') }}"

  tasks:
    - name: "Activate hetzner context"
      include_role:
        name: "hetzner/activate_context"
      vars:
        context_name: "{{ hetzner_context_name }}"

    - include_role:
        name: hetzner/create_server
      vars:
        vm_name: "{{ vm_name }}"
        os_user: "{{ my_hostvars.ansible_user }}"
        context_name: "{{ hetzner_context_name }}"

    - name: Update inventory
      include_role:
        name: "passstore/ansible_inventory"
        tasks_from: "add_variable"
      vars:
        pass_l1: "snowdrop"
        pass_l2: "hetzner"
        pass_l3: "{{ vm_name }}"
        var_name: "ansible_ssh_host"
        var_value: "{{ ip_address }}"

  # post_tasks:
  #   - name: Refresh the inventory
  #     meta: refresh_inventory

  #   - name: Get vm host vars
  #     set_fact:
  #       my_hostvars: "{{ hostvars[vm_name] }}"

    - name: "Push changes to the pass git database"
      shell: "git push"
      args:
        chdir: "{{ lookup('env', 'PASSWORD_STORE_DIR') }}"

    - name: "Add host to known hosts {{ hostvars[vm_name]['ansible_ssh_host'] }}"
      known_hosts:
        name: "{{ hostvars[vm_name]['ansible_ssh_host'] }}"
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[vm_name].ansible_ssh_host }}') }}"
        hash_host: true

- name:  Wait for the VM to boot and we can ssh
  hosts: "{{ vm_name }}"
  gather_facts: no

  tasks:
    - name: ping hosts
      wait_for_connection:
        timeout: 60

  post_tasks:
    - name: "DON'T FORGET TO SECURE YOUR SERVER"
      debug:
        msg: "Trying to start start server securization automatically For manual execution: $ ansible-playbook ansible/playbook/sec_host.yml -e vm_name={{ vm_name }} -e provider=hetzner"

...
