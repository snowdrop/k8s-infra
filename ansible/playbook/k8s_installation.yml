---
- name: "Install core kubernetes modules"
  hosts: "masters"
  gather_facts: "{{ gathering_host_info | default('true') | bool == true }}"

  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

  # Define default values for variables that are common between roles
  vars:
    client_tool: kubectl

  tasks:
    - import_role:
      name: 'containerd'
      vars:
        state: present
      tags: [containerd]
    - import_role:
      name: 'docker'
      vars:
        state: present
      tags: [docker]
    - import_role:
      name: 'k8s_docker'
      tags: [docker]
    - import_role:
      name: 'k8s_cluster'
      tags: [always,k8s_cluster]
    - import_role:
      name: 'k8s_config'
      tags: [always,k8s_config]
    - import_role:
      name: 'ingress'
      tags: [always,ingress]
    - import_role:
      name: 'cert_manager'
      tags: [always,cert_manager]
    - import_role:
      name: 'k8s_dashboard'
      tags: [always,k8s_dashboard]

- name: "Install misc kubernetes modules"
  hosts: "k8s-misc"
  gather_facts: "{{ gathering_host_info | default('true') | bool == true }}"

  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

  # Define default values for variables that are common between roles
  vars:
    client_tool: kubectl

  roles:
    - { role: 'persistence',            tags: 'persistence'}          # When Minishift or oc cluster up is NOT used
    - { role: 'identity_provider',      tags: 'identity_provider'}    # Use HTPasswdPasswordIdentityProvider as Identity Provider -> more secure
    - { role: 'enable_cluster_role',    tags: 'enable_cluster_role'}
    - { role: 'add_extra_users',        tags: 'add_extra_users'}
    - { role: 'delete_extra_users',     tags: 'delete_extra_users'}
    - { role: 'install_oc',             tags: 'install_oc'}           # Install oc client when cluster role is not used
    - { role: 'docker',                 tags: 'docker'}               # Enable to access docker on port 2376
    - { role: 'create_projects',        tags: 'create_projects'}
    - { role: 'install_nexus',          tags: 'nexus'}
    - { role: 'install_jenkins',        tags: 'jenkins'}
    - { role: 'install_jaeger',         tags: 'jaeger'}
    - { role: 'install_istio',          tags: 'istio'}
    - { role: 'install_launcher',       tags: 'install-launcher'}
    - { role: 'uninstall_launcher',     tags: 'uninstall-launcher'}
    - { role: 'component_crd_operator', tags: 'component_crd_operator'}
    - { role: 'snowdrop_site',          tags: 'snowdrop-site'}
    - { role: 'tekton_pipelines',       tags: 'tekton_pipelines'}
    - { role: 'halkyon',                tags: 'halkyon'}
#    - { role: 'k8s_cluster',            tags: 'k8s_cluster'}
    - { role: 'k8s_config',             tags: 'k8s_config'}
#    - { role: 'k8s_dashboard',          tags: 'k8s_dashboard'}
    - { role: 'k8s_service_broker',     tags: 'k8s_service_broker'}
    - { role: 'k8s_halkyon_site',       tags: 'k8s_halkyon_site'}
    - { role: 'k8s_snowdrop_site',      tags: 'k8s_snowdrop_site'}
    - { role: 'k8s_issuer_certificate', tags: 'k8s_issuer_certificate'}
    - { role: 'kind',                   tags: 'kind'}
#    - { role: 'ingress',                tags: 'ingress'}
    - { role: 'helm',                   tags: 'helm'}
    - { role: 'kubedb',                 tags: 'kubedb'}
    - { role: 'docker_registry',        tags: 'docker_registry'}
    - { role: 'tekton_pipelines',       tags: 'tekton_pipelines'}
    - { role: 'component_crd_operator', tags: 'component_crd_operator'}
    - { role: 'ocp4_console',           tags: 'ocp4_console'}
#    - { role: 'cert_manager',           tags: 'cert_manager'}

...
