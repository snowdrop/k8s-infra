---
#  - "hostname": "n311-test"
#  - "openstack": {
#      "os_username": "'$(pass show openstack/host/console_user)'"
#      "os_password": "'$(pass show openstack/host/console_pw)'"
#      "os_domain":  "'$(pass show openstack/host/console_domain)'"
#      "os_auth_url": "https://rhos-d.infra.prod.upshift.rdu2.redhat.com:13000/v3/"
#    }

# - name: "Validate passwordstore"
#   import_playbook: "passstore_controller_check.yml"

- name: "Openstack VM delete"
  hosts: localhost
  gather_facts: False
  vars:
    config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"

  pre_tasks:
    - name: "Confirm the Config File exists"
      stat: path="{{ config_file }}"
      register: st

    - name: "Load config file contents"
      include_vars: "{{ config_file }}"
      when: st.stat.exists and st.stat.isreg

  tasks:
    - name: "Set openstack_auth facts"
      set_fact:
        openstack_auth: 
          openstack_project_name: "{{ clouds.devstack.auth.project_name }}"
          openstack_console_user:  "{{ clouds.devstack.auth.username }}"
          openstack_console_password: "{{ clouds.devstack.auth.password }}"
          openstack_user_domain:  "{{ clouds.devstack.auth.domain_name }}"
          openstack_project_domain: "{{ clouds.devstack.auth.project_domain_name }}"
          openstack_os_auth_url: "{{ clouds.devstack.auth.auth_url }}"

    - name: "Execute create inventory, if tagged as so"
      include_role:
        name: "openstack/vm"
        apply:
          tags:
            - always
      vars: 
        state: "absent"
...