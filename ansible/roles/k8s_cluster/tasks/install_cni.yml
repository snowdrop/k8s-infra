---
- name: "Check if Calico is already deployed"
  shell: "kubectl -n kube-system get daemonset.apps calico-node -o jsonpath='{.metadata.name}'"
  register: kc_calico_ds
  ignore_errors: True

- name: "Print calico output"
  debug: 
    msg: "kc_calico_ds: {{ kc_calico_ds }}"
  when: "kc_calico_ds is defined"

- name: "Decide if Calico installation is needed"
  set_fact:
    install_calico: "(kc_calico_ds is undefined or (kc_calico_ds.rc != 0 and 'NotFound' not in kc_calico_ds.stderr))"

- name: "Pull Calico images"
  shell: |
    docker pull docker.io/calico/cni:{{ calico_version }}
    docker pull docker.io/calico/typha:{{ calico_version }}
    docker.io/calico/pod2daemon-flexvol:{{ calico_version }}
  register: kc_tigera_calico
  failed_when: kc_tigera_calico.rc > 0 and 'already exists' not in kc_tigera_calico.stderr

- name: "Print Decide calico output"
  debug: 
    msg: "install_calico {{ install_calico }}"

# https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart
- name: "Install the Tigera Calico operator and custom resource definitions"
  shell: "kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml"
  register: kc_tigera_calico
  failed_when: kc_tigera_calico.rc > 0 and 'already exists' not in kc_tigera_calico.stderr

# Must use custom custom-resources.yaml due to CIDR address
# - name: "Install Calico by creating the necessary custom resource"
#   shell: "kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/custom-resources.yaml"
#   register: kc_calico
#   failed_when: kc_calico.rc > 0 and 'already exists' not in kc_calico.stderr
- name: "Template Calico custom resource"
  ansible.builtin.template:
    src: calico/custom-resources.yaml.j2
    dest: /tmp/custom-resources.yaml

- name: "Install Calico by creating the necessary custom resource"
  shell: |
    kubectl create -f /tmp/custom-resources.yaml
  register: kc_calico
  failed_when: kc_calico.rc > 0 and 'already exists' not in kc_calico.stderr

...
