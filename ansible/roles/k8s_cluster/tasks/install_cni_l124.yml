---
- name: "Define CNI installation method"
  set_fact:
    cni_new: "{{ ansible_distribution == 'Fedora' or ((ansible_distribution == 'CentOS' or ansible_os_family == 'RedHat') and ansible_distribution_major_version != '7') }}"

- name: "Install Flannel Virtual Network for pod communication"
  shell: |
    kubectl -n kube-system get deployment coredns -o yaml | sed 's/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g' | kubectl apply -f -
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/{{ coreos_flannel_sha_commit }}/Documentation/kube-flannel.yml
  when: "not cni_new | bool"

- name: "Check if Calico is already deployed"
  shell: "kubectl -n kube-system get daemonset.apps calico-node -o jsonpath='{.metadata.name}'"
  register: kc_calico_ds
  ignore_errors: True
  when: "cni_new | bool"

- name: "Print calico output"
  debug: 
    msg: "kc_calico_ds: {{ kc_calico_ds }}"
  when: "(cni_new | bool) and kc_calico_ds is defined"

- name: "Decide if Calico installation is needed"
  set_fact:
    install_calico: "(cni_new | bool) and (kc_calico_ds is undefined or (kc_calico_ds.rc != 0 and 'NotFound' not in kc_calico_ds.stderr))"

- name: "Print Decide calico output"
  debug: 
    msg: "install_calico{{ item}}"
  with_items:
    - "install_calico: {{ install_calico }}"
    - "install_calico: {{ install_calico }}"

- name: "Generate Calico manifest file"
  template:
    src: "calico/calico.yaml.j2"
    dest: "/tmp/calico.yaml"
  become: yes
  when: "install_calico"

- name: "Apply Calico manifest"
  shell: "kubectl apply -f /tmp/calico.yaml"
  when: "install_calico"
...
