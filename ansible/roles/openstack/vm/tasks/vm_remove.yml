---
- name: "Find admin user home folder"
  local_action: shell echo "{{ lookup('env','HOME') }}"
  register: admin_home

- name: "Set required facts"
  set_fact: 
    key_path: "{{ admin_home.stdout }}/.ssh/id_rsa_snowdrop_openstack_{{ vm_name }}"
    volume_name: "{{ vm_name }}-volume"

- name: "Set optional facts"
  set_fact: 
    openstack_vm_ipv4: "{{ query('passwordstore', 'openstack/' + vm_name + '/ansible_ssh_host')[0] }}"
  ignore_errors: true

- stat:
    path: "{{ key_path }}"
  register: st

- name: "Delete VM {{ vm_name }}"
  os_server:
    auth:
      project_name: "{{ openstack_auth.openstack_project_name }}"
      username: "{{ openstack_auth.openstack_console_user }}"
      password: "{{ openstack_auth.openstack_console_password }}"
      user_domain_name: "{{ openstack_auth.openstack_user_domain }}"
      project_domain_name: "{{ openstack_auth.openstack_project_domain }}"
      auth_url: "{{ openstack_auth.openstack_os_auth_url }}"
    name: "{{ vm_name }}"
    state: "absent"
  register: openstack_output
  ignore_errors: true

- name: "Delete VM volume"
  openstack.cloud.volume:
    auth:
      project_name: "{{ openstack_auth.openstack_project_name }}"
      username: "{{ openstack_auth.openstack_console_user }}"
      password: "{{ openstack_auth.openstack_console_password }}"
      user_domain_name: "{{ openstack_auth.openstack_user_domain }}"
      project_domain_name: "{{ openstack_auth.openstack_project_domain }}"
      auth_url: "{{ openstack_auth.openstack_os_auth_url }}"
    display_name: "{{ volume_name }}"
    state: absent
  ignore_errors: true

- name: "Delete key {{ vm_name }} from server"
  os_keypair:
    state: absent
    auth:
      project_name: "{{ openstack_auth.openstack_project_name }}"
      username: "{{ openstack_auth.openstack_console_user }}"
      password: "{{ openstack_auth.openstack_console_password }}"
      user_domain_name: "{{ openstack_auth.openstack_user_domain }}"
      project_domain_name: "{{ openstack_auth.openstack_project_domain }}"
      auth_url: "{{ openstack_auth.openstack_os_auth_url }}"
    name: "{{ vm_name }}"
  ignore_errors: true

- name: "Remove the host from the known_hosts file"
  known_hosts:
    name: "{{ openstack_vm_ipv4 }}"
    state: absent
  when: openstack_vm_ipv4 is defined
  ignore_errors: true

# - name: "Remove existing SSH key to use with instance"
#   file:
#     state: absent
#     path: "{{ item }}"
#   loop:
#     - "{{ key_path }}"
#     - "{{ key_path }}.pub"
#   ignore_errors: true

...
