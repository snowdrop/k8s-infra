---
- name: "Set pass facts ssh keys"
  set_fact:
    pass_rsa_private_key: "{{ query('passwordstore', pass_l3_route + '/id_rsa returnall=true', errors='ignore')[0] | default('') }}"
    pass_rsa_public_key: "{{ query('passwordstore', pass_l3_route + '/id_rsa.pub returnall=true', errors='ignore')[0] | default('') }}"

- name: "Generate new RSA private key"
  openssl_privatekey:
    path: "{{ '~/.ssh/id_rsa_'+ pass_l3_name }}"
  when: "(pass_rsa_private_key is not defined or pass_rsa_private_key | length == 0)"
  register: rsa_pk_gen_res

- name: "Gather RSA PK contents"
  set_fact:
    pass_rsa_private_key: "{{ query('file', '~/.ssh/id_rsa_'+ pass_l3_name) }}"
  when: "(pass_rsa_private_key is not defined or pass_rsa_private_key | length == 0)"

- name: "Add the contents of the private key to pass"
  shell: "cat ~/.ssh/id_rsa_{{ pass_l3_name }} | pass insert -m {{ pass_l3_route}}/id_rsa "
  when: "(res_set_fact.ansible_facts.pass_rsa_private_key is not defined or res_set_fact.ansible_facts.pass_rsa_private_key | length == 0)"

- name: "Generate an OpenSSL public key from the private key, if the RSA key was generated."
  openssl_publickey:
    path: "~/.ssh/id_rsa_{{ pass_l3_name }}.pub"
    privatekey_path: "~/.ssh/id_rsa_{{ pass_l3_name }}"
    format: "OpenSSH"
  when: "rsa_pk_gen_res is defined and rsa_pk_gen_res.changed"

- name: "Add the contents of the public key to pass"
  shell: "cat ~/.ssh/id_rsa_{{ pass_l3_name }}.pub | pass insert -m {{ pass_l3_route }}/id_rsa.pub "
  when: "(res_set_fact.ansible_facts.pass_rsa_public_key is not defined or res_set_fact.ansible_facts.pass_rsa_public_key | length == 0)"

...
