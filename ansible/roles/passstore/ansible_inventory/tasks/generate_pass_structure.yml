---
- name: "Check if a folder already exists in pass for this host"
  stat:
    path: "{{ my_passwordstore_folder }}/{{ pass_l3_route }}"
  register: host_folder_stat

- name: "If the folder already exists, fail!"
  fail:
    msg:
      - "The {{ pass_l3 }} host folder already exists in pass, to execute the creation first remove that folder using the required playbook."
      - "$ ansible-playbook ansible/playbook/passstore/passstore_controller_inventory_remove.yml -e vm_name={{ pass_l3 }} -e pass_provider={{ pass_l2 }}"
  when: "host_folder_stat.stat.exists"

- name: "Build the password creation statement"
  set_fact:
    pass_os_password_tmp: "{{  (' userpaserpass=' + os_password) if os_password is defined else (' length=16') }}"

- name: "Set pass facts (user, pw, ssh_port)"
  set_fact:
    # ansible_user
    pass_os_user: "{{ query('passwordstore', pass_l3_route + '/os_user create=True userpass=' + username)[0] }}"
    pass_os_password: "{{ query('passwordstore', pass_l3_route + '/os_password create=True ' + pass_os_password_tmp )[0] }}"
    # new_ssh_port_number, ansible_ssh_port
    pass_ssh_port: "{{ query('passwordstore', pass_l3_route + '/ssh_port create=True userpass=' + custom_ssh_port_number)[0] }}"
    ansible_ssh_port: "{{ query('passwordstore', pass_l3_route + '/ansible_ssh_port create=True userpass=22')[0] }}"
  ignore_errors: true
  failed_when: false
  register: res_set_fact
...
