- set_fact:
    tempPath: /tmp/generated

- set_fact:
    renewBefore: 8759h # 1 year - 1h
    duration: 8760h
    letsencrypt_url: https://acme-{{ letsencrypt_env }}-v02.api.letsencrypt.org/directory
  when: letsencrypt_env == "staging"

- set_fact:
    renewBefore: 2136h # 3 months - 24h
    duration: 2190h
    letsencrypt_url: https://acme-v02.api.letsencrypt.org/directory
  when: letsencrypt_env == "prod"

- name: Create /tmp/generated directory
  file:
    path: "{{ tempPath }}"
    state: directory

- name: Remove generated files
  shell: rm -rf {{ tempPath }}/*.yml

- name: Generate the secret yml files. One per namespace
  template:
    src: godaddy_token_secret.yml.j2
    dest: "{{ tempPath }}/{{ item.namespace }}-{{ item.name }}-secret.yml"
  with_items:
    - { name: godaddy-api-key,  namespace: snowdrop-site }
    - { name: godaddy-api-key,  namespace: halkyon-site }

- name: Generate the certificate yml files. One per namespace
  template:
    src: certificate.yml.j2
    dest: "{{ tempPath }}/{{ item.namespace }}-{{ item.name }}-certificate.yml"
  with_items:
    - { name: snowdrop-dev,          namespace: snowdrop-site,  names: "snowdrop.dev,*.apps.ocp.snowdrop.dev" ,          secretname: www-snowdrop-dev-tls}
    - { name: halkyon-io,            namespace: halkyon-site,   names: "halkyon.io,www.halkyon.io",            secretname: www-halkyon-io-tls}

- name: Generate issuer yml files for the different domains
  template:
    src: letsencrypt_issuer.yml.j2
    dest: "{{ tempPath }}/{{ item.namespace }}-{{ item.name }}-issuer.yml"
  with_items:
    - { name: snowdrop-dev,          namespace: snowdrop-site,  names: "snowdrop.dev,*.apps.ocp.snowdrop.dev"}
    - { name: halkyon-io,            namespace: halkyon-site,   names: "halkyon.io,www.halkyon.io"}

- name: Deploy the Godaddy secrets, Issuers resources containing the API Token
  shell: |
    {{ client_tool }} {{ k8s_config }} apply -f {{ tempPath }}
