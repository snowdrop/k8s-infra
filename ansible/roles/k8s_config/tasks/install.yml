---
- name: "Create k8s config folder on host OS user HOME"
  file:
    path: ".kube"
    state: directory
    mode: '0755'

- name: "Copy k8s config file to host OS user folder"
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: ".kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    remote_src: yes
    force: no
  become: yes

- name: "Find user home folder"
  connection: local
  local_action: "shell echo {{ lookup('env','HOME') }}"
  register: local_user_home

- name: "Copy k8s config file to controller .kube folder"
  fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ local_user_home.stdout }}/.kube/{{ pass_provider }}-{{ ansible_hostname }}-config"
    mode: '0600'
    flat: yes
  become: yes

- name: "Fetch K8S config"
  connection: local
  local_action: "shell cat {{ local_user_home.stdout }}/.kube/{{ pass_provider }}-{{ ansible_hostname }}-config"
  register: k8s_config

# TODO later as it doesn't work on the current release. Fails with fatal: [vm20220316-t02]: FAILED! => {"msg": "Unexpected templating type error occurred on ({{ query('passwordstore', pass_provider + '/' + ansible_hostname + '/kube_cfg create=True userpass=' + get_config)[0] }}): can only concatenate str (not \"dict\") to str"}
# - name: "Add k8s config to passwordstore"
#   set_fact:
#     kube_config: "{{ query('passwordstore', pass_provider + '/' + ansible_hostname + '/kube_cfg create=True userpass=''' + k8s_config.stdout + ''') }}"
#   when: passwordstore_enabled | bool

- name: Print kubernetes config file location
  debug:
    msg:
      - "You can use the following Kubernetes config file to interact with remote cluster via kubectl"
      - "{{ k8s_config_filename }}"
      - "or copy/paste the following config included between the [...] in a file"
      - "{{ k8s_config.stdout_lines }}"
...
