---
name: Pull Request Test
on:
  push:
  workflow_dispatch:
  pull_request:

jobs:
  test-openstack-roles:
    name: Test Collection Openstack Roles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        openstack_version: ["master"]
        # python: [ pypy3.8 ]
        python: [ 3.11 ]
        roles: [openstack_vm]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.11
        with:
          branch: ${{ matrix.openstack_version }}
          enabled_services: 'ir-api,s-account,s-container,s-object,s-proxy,swift'
          # 'ir-api,ir-cond,s-account,s-container,s-object,s-proxy,q-svc,q-agt,q-dhcp,q-l3,q-meta,-cinder,-c-sch,-c-api,-c-vol,-c-bak,-ovn,-ovn-controller,-ovn-northd,-q-ovn-metadata-agent'
          cache: devstack
      - name: Install Python
        uses: actions/setup-python@v4 
        with:
          python-version:  ${{ matrix.python }}
          cache: pip
      - name: Install python requirements
        run: pip install -r requirements.txt
      - name: Build Ansible Collection
        run: ansible-galaxy collection build ansible/ansible_collections/snowdrop/cloud_infra --output build/ --force
      - name: Install Ansible Collection
        run: ansible-galaxy collection install $(find . -name snowdrop-cloud_infra-*.tar.gz) --upgrade
      - name: Run tests
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE
          echo "KEYSTONE_SERVICE_URI: $KEYSTONE_SERVICE_URI"
          ls -la
          pwd
          ls -la ..
          echo "STACK_ENV_VARS: $STACK_ENV_VARS"
          echo "HOME: $HOME"
          env
          export
          # python3 -m venv .snowdrop-venv
          # source .snowdrop-venv/bin/activate
          # pip install -r requirements.txt
          # python3 -m pip install -r requirements.txt
          molecule test --scenario-name github
        working-directory: ansible/ansible_collections/snowdrop/cloud_infra/roles/${{ matrix.roles }}
...
