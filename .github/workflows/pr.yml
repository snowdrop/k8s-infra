---
name: Pull Request Test
on:
  push:
    branches-ignore:
      - master
      - main
  workflow_dispatch:
  pull_request:

jobs:
  test-pr:
    name: Test Collection Roles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        openstack_version: ["master"]
        python: [ pypy3.8 ]
        roles: [openstack_vm]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4 
        with:
          python-version:  ${{ matrix.python }}
          cache: pip
      - name: Install python requirements
        run: pip install -r requirements.txt
      - name: Build Ansible Collection
        run: ansible-galaxy collection build ansible/ansible_collections/snowdrop/cloud_infra --output build/ --force
      - name: Install Ansible Collection
        run: ansible-galaxy collection install ./build/snowdrop-cloud_infra-1.0.0.tar.gz --upgrade
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.11
        with:
        #   conf_overrides: |
        #     # pyghmi is not mirrored on github
        #     PYGHMI_REPO=https://opendev.org/x/pyghmi
        #     enable_plugin ironic https://github.com/openstack/ironic ${{ matrix.openstack_version }}
        #     LIBS_FROM_GIT=pyghmi,virtualbmc
        #     FORCE_CONFIG_DRIVE=True
        #     Q_AGENT=openvswitch
        #     Q_ML2_TENANT_NETWORK_TYPE=vxlan
        #     Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch
        #     DEFAULT_INSTANCE_TYPE=baremetal
        #     OVERRIDE_PUBLIC_BRIDGE_MTU=1400
        #     VIRT_DRIVER=ironic
        #     BUILD_TIMEOUT=1800
        #     SERVICE_TIMEOUT=90
        #     GLANCE_LIMIT_IMAGE_SIZE_TOTAL=5000
        #     Q_USE_SECGROUP=False
        #     API_WORKERS=1
        #     IRONIC_BAREMETAL_BASIC_OPS=True
        #     IRONIC_BUILD_DEPLOY_RAMDISK=False
        #     IRONIC_AUTOMATED_CLEAN_ENABLED=False
        #     IRONIC_CALLBACK_TIMEOUT=600
        #     IRONIC_DEPLOY_DRIVER=ipmi
        #     IRONIC_INSPECTOR_BUILD_RAMDISK=False
        #     IRONIC_RAMDISK_TYPE=tinyipa
        #     IRONIC_TEMPEST_BUILD_TIMEOUT=720
        #     IRONIC_TEMPEST_WHOLE_DISK_IMAGE=False
        #     IRONIC_VM_COUNT=1
        #     IRONIC_VM_EPHEMERAL_DISK=1
        #     IRONIC_VM_LOG_DIR=/opt/stack/new/ironic-bm-logs
        #     IRONIC_VM_SPECS_RAM=1024
        #     IRONIC_DEFAULT_DEPLOY_INTERFACE=direct
        #     IRONIC_ENABLED_DEPLOY_INTERFACES=direct
        #     SWIFT_ENABLE_TEMPURLS=True
        #     SWIFT_TEMPURL_KEY=secretkey
        #   enabled_services: 'ir-api,ir-cond,s-account,s-container,s-object,s-proxy,q-svc,q-agt,q-dhcp,q-l3,q-meta,-cinder,-c-sch,-c-api,-c-vol,-c-bak,-ovn,-ovn-controller,-ovn-northd,-q-ovn-metadata-agent'
          enabled_services: 's-account,s-container,s-object,s-proxy'
      # - name: Create stack user
        # run: tools/create-stack-user.sh
      - name: Run tests
        run: molecule test --scenario-name github
        working-directory: ansible/ansible_collections/snowdrop/cloud_infra/roles/${{ matrix.roles }}
...
